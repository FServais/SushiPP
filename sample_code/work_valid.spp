
$ variable decl-assign
maki a = 2

$ multiple decl assing
maki a = 3, b = 5, c = 18

$multiple decl
maki a, b, v=  3

$func decl
maki func a b : nori (a + b) ;;

$ func decl with type
maki func a b<int> : nori (a + 2) ;;

$ decl eol after body
maki func a b : nori (a = b - 2) ;;

$ function call !!
call (soy a b : nori 18 + a + b) 3 1

$ expressions
a = a + b - (a += b)
a **= 25 ** 3

$ strings 
a = "aaa"
b = "bbb"
c = a.b
c .= "ccc"

$ mutliple item function
maki func a<int> v<float> :
	maki a = 2, a = 3,
			b = 2

	a = 25 - 36.25
	call func b[2] 2

	call func (call func b[2] a) c
;;
 

$ datastructures
maki a = { 2, b, 1 }
maki b = { a, b, 3, 18, "aaa" }
maki c = #[ a, b, 3, 18, "aaa" ]#
maki ba_c = #[ 18 to 21 ]#
maki a = 2


$ return
nori "fck"

$ inline nori
maki func a b<int>: nori (a + b);;
maki func a : 
	nori (a + b);;
maki func a :
	nori (a + b)
;;

$ multiline
maki func a b :
	a += b
	b += 2
	a *= b
	nori (a + b)
;;

$ character 
maki a = 'a'

$switch case inline one line
menu (call func a b)
	a -> a = b + 2 ;;
	b -> c = b + 2 ;; 
	_ -> a = d + 2 ;;
;;

$ switch

$ switch multiline
menu a
	'a' -> a = 18;;
	'b' ->
		call func do stuff
	;;
	'c' -> c = 19;;
;;

for i = 2, i < 10, ++i
	call do something
;;

foreach { 1, 2, 3 } as list-item
	call do something
;;

foreach items as item
	call do something
;;

for i = 2, i < 10, ++i
	call do something
;;

for , i < 10, 
	call do somthing else-4
	++i
;;

roll a == 2
	break
	continue
	nori (18 + 25)
;;

for i = 2, i < 10, ++i
	call do something
;;

foreach { 1, 2, 3 } as list-item
	call do something
;;

foreach items as item
	call do something
;;

for i = 2, i < 10, ++i
	call do something
;;

for , i < 10, 
	call do somthing else-4
	++i
;;

roll a == 2
	break
	continue
	nori (18 + 25)
;;

$ simple if
if a 
	nori 25
;;

$ more elaborate if
if a < 2 || c + 3 
	call do something
	a = a + 2
;;

$ if else
if a < 2 || c + 3 
	call do something
	a = a + 2
else 
	call something else_
;;

$ if elseif else
if a < 2 || c + 3 
	call do something
	a = a + 2
elseif a < 145
	call escape da thing
	nori (call expre ss ss)
else 
	call something else_
;;

$ not beautiful but should work
if a < 2 || c + 3 
	call do something
	a = a + 2 elseif a < 145 
    call escape da thing
	nori (call expre ss ss) 
	call func a b else 
	call something else_
;;